{% schema %}
{
  "name": "Font Preview",
  "settings": [
    {
      "type": "select",
      "id": "default_font",
      "label": "Default Font",
      "options": [
        { "value": "Arial", "label": "Arial" },
        { "value": "Courier New", "label": "Courier New" },
        { "value": "Georgia", "label": "Georgia" },
        { "value": "Times New Roman", "label": "Times New Roman" },
        { "value": "Verdana", "label": "Verdana" }
      ],
      "default": "Arial"
    },
    {
      "type": "textarea",
      "id": "additional_fonts",
      "label": "Additional Fonts (comma-separated)",
      "default": "Roboto, Open Sans, Lato, Montserrat, Poppins, Raleway, Nunito, Oswald, PT Sans, Merriweather, Playfair Display, Droid Sans, Cabin, Source Sans Pro, Ubuntu, Quicksand, Fira Sans, Lora, Rubik, Arimo, Comfortaa, Inconsolata, Dancing Script, Anton, Bebas Neue, Cairo, Muli, Varela Round, Pangolin, Karla, Bitter, Julius Sans One, Archivo, Yesteryear"
    },
    {
      "type": "text",
      "id": "default_text",
      "label": "Default Text",
      "default": "The quick brown fox jumps over the lazy dog."
    }
  ],
  "presets": [
    {
      "name": "Default",
      "category": "Custom"
    }
  ]
}
{% endschema %}

<div class="font-preview">
  <input type="text" id="fontInput" placeholder="Type your text here..." value="{{ settings.default_text }}" />
  <input type="text" id="fontSearch" placeholder="Search fonts..." />

  <select id="fontSelect" multiple>
    <!-- Default fonts -->
    <option value="{{ settings.default_font }}" selected>{{ settings.default_font }}</option>
    <!-- Additional fonts populated by JavaScript -->
  </select>

  <div class="font-preview-box">
    <p id="previewText" style="font-family: {{ settings.default_font }};">
      {{ settings.default_text }}
    </p>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    var fontInput = document.getElementById('fontInput');
    var fontSelect = document.getElementById('fontSelect');
    var fontSearch = document.getElementById('fontSearch');
    var previewText = document.getElementById('previewText');

    // Parse additional fonts from schema setting
    var additionalFonts = "{{ settings.additional_fonts }}".split(',').map(font => font.trim());

    // Add additional fonts to select dropdown
    additionalFonts.forEach(function(font) {
      var option = document.createElement('option');
      option.value = font;
      option.textContent = font;
      fontSelect.appendChild(option);
    });

    // Function to load Google Fonts dynamically based on selected fonts
    function loadFonts(fontNames) {
      // Remove previously loaded fonts
      var existingLinks = document.querySelectorAll('link[data-font]');
      existingLinks.forEach(function(link) {
        document.head.removeChild(link);
      });

      fontNames.forEach(function(fontName) {
        var link = document.createElement('link');
        link.href = 'https://fonts.googleapis.com/css2?family=' + encodeURIComponent(fontName) + '&display=swap';
        link.rel = 'stylesheet';
        link.dataset.font = fontName;
        document.head.appendChild(link);
      });
    }

    // Load default font and fonts from the select dropdown
    function updatePreview() {
      var selectedFonts = Array.from(fontSelect.selectedOptions).map(option => option.value);
      loadFonts(selectedFonts);
      previewText.style.fontFamily = selectedFonts.join(', ');
    }

    // Apply default font
    updatePreview();

    // Update preview text on input
    fontInput.addEventListener('input', function() {
      previewText.textContent = fontInput.value || '{{ settings.default_text }}';
    });

    // Update fonts on dropdown change
    fontSelect.addEventListener('change', updatePreview);

    // Filter fonts based on search input
    fontSearch.addEventListener('input', function() {
      var filter = fontSearch.value.toLowerCase();
      Array.from(fontSelect.options).forEach(function(option) {
        var text = option.text.toLowerCase();
        option.style.display = text.includes(filter) ? '' : 'none';
      });
    });
  });
</script>

<style>
  .font-preview {
    width: 80vw;
    margin: 0 auto;
    padding: 20px;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    background-color: #f9f9f9;
  }

  .font-preview input[type="text"],
  .font-preview select {
    width: 100%;
    padding: 12px;
    margin-bottom: 12px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    transition: border-color 0.2s ease-in-out;
  }

  .font-preview input[type="text"]:focus,
  .font-preview select:focus {
    border-color: #0073e6;
    outline: none;
  }

  .font-preview-box {
    margin-top: 12px;
    background-color: #fff;
    padding: 10px;
    border: 1px solid #e0e0e0;
    border-radius: 4px;
    min-height: 100px;
  }

  #fontSearch {
    margin-bottom: 10px;
  }

  #previewText {
    font-size: 20px;
    line-height: 1.6;
  }
</style>
